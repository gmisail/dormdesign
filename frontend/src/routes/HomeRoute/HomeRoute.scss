@import "../../styles/variables.scss";

@keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.room-info-location {
  margin: auto;
  margin-top: 20px;
  max-width: 300px;

  font-size: 0.8rem;
  text-align: center;

  img {
    width: 100%;
  }
}

.create-room-modal-body {
  .important-info {
    margin-bottom: 40px;
  }

  h5 {
    font-size: 1.1rem;
  }
  p[name="or"] {
    margin: 30px 0 30px 0;
    text-align: center;
  }
  p {
    margin-bottom: 10px;
  }
}

.content-wrapper {
  overflow: auto;
  max-height: 100%;

  .content-container {
    padding: 0 50px;
    max-width: 1200px;
    margin: 10vh auto 0 auto;

    display: grid;
    grid-template-rows: max-content;
    // Need minmax(0, 1fr) to prevent items from overflowing grid column (if it was just 1fr) - https://css-tricks.com/preventing-a-grid-blowout/
    grid-template-columns: minmax(0, 1fr);
    grid-template-areas:
      "header"
      "buttons"
      "recent-rooms";
    gap: 50px;

    justify-items: center;

    @media screen and (max-width: 875px) {
      padding: 15px;
      // gap: 20px;
      grid-template-areas:
        "header"
        "buttons"
        "recent-rooms";
      grid-template-columns: 100%;
    }

    %homepage-custom-card {
      padding: 25px;

      opacity: 0;
    }

    .header-container {
      grid-area: header;
      display: flex;
      justify-self: stretch;
      justify-content: center;
      align-items: center;

      .logo {
        flex-grow: 1;
        grid-area: logo;
        max-width: 800px;

        path {
          fill: $text-color-dark;
        }
      }
    }

    .buttons-container {
      grid-area: buttons;

      display: flex;
      flex-flow: row nowrap;
      justify-content: center;
      align-items: center;
    }

    .recent-rooms-container {
      grid-area: recent-rooms;
      max-width: 100%;

      display: flex;
      flex-flow: column nowrap;
      align-items: center;
      margin-top: 50px;
      min-width: 50%;

      .recent-rooms {
        display: flex;
        flex-flow: row nowrap;
        max-width: 100%;
        overflow-x: scroll;
        padding: 15px;

        & > * {
          flex-shrink: 0;
        }

        & > * {
          margin-left: 25px;
        }
        :first-child {
          margin-left: 0;
        }

        .recent-room {
          position: relative;

          width: 160px;
          height: 200px;

          background-color: $foreground-color;
          border-radius: $card-border-radius;
          box-shadow: $box-shadow;

          transition: all 0.075s ease;

          &:hover {
            // Convert the shadow into a solid outline on hover
            box-shadow: 0px 0px 0px 2px $color-secondary;
          }

          /* Remove default link text effects */
          a,
          a:hover,
          a:visited,
          a:active {
            color: inherit;
            text-decoration: none;
          }

          .recent-room-remove-button {
            position: absolute;
            top: 0;
            right: 0;
            width: 2.25rem;
            transition: all 0.075s ease;
          }

          .recent-room-name {
            width: 130px;

            text-align: center;
            font-weight: 600;

            position: absolute;
            top: 25px;
            left: 15px;
            margin: 0;

            /* Hide names that are too long (displaying '...' to indicate this) */
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
          }

          .room-preview {
            position: absolute;
            bottom: 15px;
            left: 15px;

            width: 130px;
            height: 130px;

            margin: auto;
          }
        }
      }
    }
  }
}

#background-canvas {
  position: fixed;
  width: 100vw;
  height: 100vh;
  left: 0;
  top: 0;
  z-index: -10;
  border: none;
}
