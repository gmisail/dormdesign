version: "3"
services:
  cache:
    image: redis:alpine
    # '--save "" and --appendonly no' should disable all data persistence
    # '--maxmemory-policy allkeys-lru' makes Redis act like an LRU cache when memory is exceeded,
    #     removing the LRU keys to make room for new ones
    command: "redis-server --requirepass ${REDIS_PASSWORD} --protected-mode yes --maxmemory 100mb --maxmemory-policy allkeys-lru --save \"\" --appendonly no"
    ports:
      - 6379:6379
    volumes:
      - ./redis_data:/data/redis_data
  db:
    image: mongo
    ports:
      - "27017:27017"
    restart: unless-stopped
    volumes:
      - dd_database:/data/db
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    stdin_open: true
    volumes:
      # Bind code in container to local src code to support hot-reloading
      - "./frontend/src:/app/src"
      - "./frontend/public:/app/public"
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - server
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - DATABASE_ADDRESS=mongodb://db:27017
      - REDIS_PASSWORD=$REDIS_PASSWORD
      - CACHE_ADDRESS=cache
      - CHOKIDAR_USEPOLLING=true
      - DEBUG_MESSAGES=true
    ports:
      - 8000:8000
    depends_on:
      - db
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "5500:80"
    depends_on:
      - frontend
      - server
      - db
      - cache
volumes:
  dd_database:
